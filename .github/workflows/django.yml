name: Django CI

on:
  push:
    branches: [ "staging", "lack0fdev" ]
  pull_request:
    branches: [ "staging", "lack0fdev" ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-slim-bookworm
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      
      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y build-essential libpq-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run Database Migrations
        env:
          DATABASE_URL: postgres://testuser:testpass@postgres:5432/testdb
        run: python manage.py migrate --run-syncdb

      - name: Collect Static Files
        env:
          DJANGO_SETTINGS_MODULE: sga.settings
          DATABASE_URL: postgres://testuser:testpass@postgres:5432/testdb
        run: python manage.py collectstatic --noinput

      - name: Run Tests with Coverage
        env:
          DJANGO_SETTINGS_MODULE: sga.settings
          DATABASE_URL: postgres://testuser:testpass@postgres:5432/testdb
        run: |
          coverage run --source='.' manage.py test --settings=sga.settings_test
          coverage report
          coverage html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort
      - name: Run Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --statistics
      - name: Run Black
        run: black --check .
      - name: Run isort
        run: isort --check-only .

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit
      - name: Run Safety Check
        run: safety check 
      - name: Run Bandit Security Linter
        run: |
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . -lll -f txt
